version: '3.9'

services:
  # Zookeeperサービス
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"  # Zookeeperのデフォルトポート
    volumes:
      - zookeeper-data:/bitnami/zookeeper

  # Kafkaサービス
  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID:-1}
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"  # Kafkaのデフォルトポート
    volumes:
      - kafka-data:/bitnami/kafka

  # service1アプリケーション
  service1:
    build:
      context: service1/
    container_name: service1
    ports:
      - "8080:8080"  # service1のアプリケーションポート
      - "5005:5005"  # service1用リモートデバッグポート
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mysql://service1-db:3306/mydatabase
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # Kafkaのブートストラップサーバー
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      - service1-db
      - kafka
    env_file:
      - .env.development  # 環境変数ファイルの指定

  # service1用データベース
  service1-db:
    image: mysql:8.0
    container_name: service1-db
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=mydatabase
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3306:3306"  # MySQLのデフォルトポート
    volumes:
      - ./db/initdb.d:/docker-entrypoint-initdb.d
      - service1-mysql-data:/var/lib/mysql  # データ永続化用ボリューム
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # service2アプリケーション
  service2:
    build:
      context: service2/
    container_name: service2
    ports:
      - "8081:8080"  # service2のアプリケーションポート
      - "5006:5006"  # service2用リモートデバッグポート
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:mysql://service2-db:3306/otherdatabase
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD}
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # Kafkaのブートストラップサーバー
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    depends_on:
      - service2-db
      - kafka
    env_file:
      - .env.development  # 環境変数ファイルの指定

  # service2用データベース
  service2-db:
    image: mysql:8.0
    container_name: service2-db
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=otherdatabase
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    ports:
      - "3307:3306"  # 異なるホストポートでのMySQL接続
    volumes:
      - service2-mysql-data:/var/lib/mysql  # データ永続化用ボリューム
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  service1-mysql-data:
  service2-mysql-data:
  zookeeper-data:
  kafka-data:
